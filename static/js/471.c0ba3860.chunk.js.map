{"version":3,"file":"static/js/471.c0ba3860.chunk.js","mappings":"qNAIaA,EAAUC,EAAAA,GAAOC,IAAIC,WAAW,CAC3CC,kBAAAA,EAAAA,IADqBH,CAErBI,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAEoB,SAACC,GAAC,OAAKA,EAAEC,MAAMC,OAAOC,IAAI,GAI5CC,EAAAA,GACAC,EAAAA,IAGSC,EAAQZ,EAAAA,GAAOa,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sFACb,SAACC,GAAC,OAAKA,EAAEC,MAAMQ,MAAMC,GAAG,IAC1B,SAACV,GAAC,OAAKA,EAAEC,MAAMU,UAAU,EAAE,IACzB,SAACX,GAAC,OAAKA,EAAEC,MAAMW,YAAYC,KAAK,IACtC,SAACb,GAAC,OAAKA,EAAEC,MAAMC,OAAOY,GAAG,I,SCdvBC,EAAa,SAAHC,GAI6B,IAHlDC,EAAQD,EAARC,SACAC,EAAeF,EAAfE,gBACAC,EAAeH,EAAfG,gBAEA,OACEC,EAAAA,EAAAA,KAAC3B,EAAO,CACN0B,gBAAe,OAAAE,OAASF,EAAe,KACvCD,gBAAiBA,EAAgBD,UAEjCG,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAO,OAAMT,UAEbG,EAAAA,EAAAA,KAACd,EAAK,CAAAW,SAAEA,OAIhB,C,yMCxBaxB,E,QAAUC,GAAOiC,QAAO7B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,Q,mBCmErC,EArDa,WACX,IACM6B,GAAwBC,EAAAA,EAAAA,MACxBC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IACnCC,GACEC,EAAAA,EAAAA,KADMC,EAAeF,EAAfE,gBAAiBC,EAAWH,EAAXG,YAAaC,EAAoBJ,EAApBI,qBAAsBC,EAAUL,EAAVK,WAS5D,OANAC,EAAAA,EAAAA,YAAU,WACJT,EAAeU,SAASC,OAPZ,IAQdb,GAASc,EAAAA,EAAAA,GAAS,CAAEC,MARN,IAQuBC,aAEzC,GAAG,CAAChB,EAAUE,EAAeU,SAASC,UAGpCI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7B,SAAA,EACEG,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACI,gBAAiB4B,EAAQ9B,SAAC,UACtCG,EAAAA,EAAAA,KAAC3B,EAAO,CAAAwB,UACN4B,EAAAA,EAAAA,MAACvB,EAAAA,EAAS,CAAC0B,GAAI,IAAI/B,SAAA,EACjBG,EAAAA,EAAAA,KAAC6B,EAAAA,EAAG,CACF1B,QAAQ,OACR2B,oBAAoB,iBACpBC,iBAAiB,OACjBC,QAAS,GACTC,GAAI,GAAGpC,SAENa,EAAeU,SAASc,KAAI,SAACC,GAAW,OACvCnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAEVC,SAAUF,EAAYE,SACtBC,SAAUH,EAAYG,SACtBC,KAAMJ,EAAYI,KAClBC,SAAUL,EAAYK,SACtBC,MAAON,EAAYM,MACnBC,OAAQP,EAAYO,OACpBC,UAAW,kBAAM1B,EAAqBkB,EAAY,GAP7CA,EAAYS,IAQjB,MAGL5B,GAAeD,IACdf,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACC,QAAS5B,EAAWrB,UAC1BG,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CACXD,QAAS5B,EACTH,gBAAiBA,YAM3Bf,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,MAGnB,C","sources":["components/global/PageBanner/PageBanner.styled.ts","components/global/PageBanner/PageBanner.tsx","pages/Shop/Shop.styled.ts","pages/Shop/Shop.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport shouldForwardProp from \"@styled-system/should-forward-prop\";\r\nimport { color, background, ColorProps, BackgroundProps } from \"styled-system\";\r\n\r\nexport const Section = styled.div.withConfig({\r\n  shouldForwardProp,\r\n})<BackgroundProps & ColorProps>`\r\n  height: 450px;\r\n  background-color: ${(p) => p.theme.colors.bbgc};\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  ${color};\r\n  ${background};\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-family: ${(p) => p.theme.fonts.mtf};\r\n  font-size: ${(p) => p.theme.fontSizes[9]};\r\n  font-weight: ${(p) => p.theme.fontWeights.black};\r\n  color: ${(p) => p.theme.colors.mtc};\r\n`;\r\n","import React from \"react\";\r\nimport { BackgroundProps, ColorProps } from \"styled-system\";\r\nimport { Container } from \"src/components/global/Container\";\r\nimport { ChildrenProp } from \"src/interfaces/childrenProp.interface\";\r\nimport { Section, Title } from \"./PageBanner.styled\";\r\n\r\nexport const PageBanner = ({\r\n  children,\r\n  backgroundColor,\r\n  backgroundImage,\r\n}: ChildrenProp & BackgroundProps & ColorProps) => {\r\n  return (\r\n    <Section\r\n      backgroundImage={`url(${backgroundImage})`}\r\n      backgroundColor={backgroundColor}\r\n    >\r\n      <Container\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        height=\"100%\"\r\n      >\r\n        <Title>{children}</Title>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section``;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useProductModal } from \"src/hooks/useProductModal\";\r\nimport { AppDispatch } from \"src/redux/store\";\r\nimport { selectProductsObject } from \"src/redux/products\";\r\nimport { fetchAll } from \"src/api/productsAPI\";\r\nimport { Portal } from \"src/components/global/Portal\";\r\nimport { Box } from \"src/components/global/Box\";\r\nimport { Container } from \"src/components/global/Container\";\r\nimport { PageBanner } from \"src/components/global/PageBanner\";\r\nimport { ProductCard } from \"src/components/global/ProductCard\";\r\nimport { ProductModal } from \"src/components/global/ProductModal\";\r\nimport { Subscription } from \"src/components/modules/Subscription\";\r\nimport { Section } from \"./Shop.styled\";\r\nimport shopImg from \"src/images/cart.jpg\";\r\n\r\nconst Shop = () => {\r\n  const MAX_ITEMS = 16;\r\n  const dispatch: AppDispatch = useDispatch<AppDispatch>();\r\n  const productsObject = useSelector(selectProductsObject);\r\n  const { selectedProduct, isModalOpen, openModalWithProduct, closeModal } =\r\n    useProductModal();\r\n\r\n  useEffect(() => {\r\n    if (productsObject.products.length < MAX_ITEMS) {\r\n      dispatch(fetchAll({ limit: MAX_ITEMS.toString() }));\r\n    }\r\n  }, [dispatch, productsObject.products.length]);\r\n\r\n  return (\r\n    <>\r\n      <PageBanner backgroundImage={shopImg}>Shop</PageBanner>\r\n      <Section>\r\n        <Container py={150}>\r\n          <Box\r\n            display=\"grid\"\r\n            gridTemplateColumns=\"repeat(4, 1fr)\"\r\n            gridTemplateRows=\"auto\"\r\n            gridGap={20}\r\n            mt={40}\r\n          >\r\n            {productsObject.products.map((productItem) => (\r\n              <ProductCard\r\n                key={productItem._id}\r\n                category={productItem.category}\r\n                imageURL={productItem.imageURL}\r\n                name={productItem.name}\r\n                priceOld={productItem.priceOld}\r\n                price={productItem.price}\r\n                rating={productItem.rating}\r\n                openModal={() => openModalWithProduct(productItem)}\r\n              />\r\n            ))}\r\n          </Box>\r\n          {isModalOpen && selectedProduct && (\r\n            <Portal onClose={closeModal}>\r\n              <ProductModal\r\n                onClose={closeModal}\r\n                selectedProduct={selectedProduct}\r\n              />\r\n            </Portal>\r\n          )}\r\n        </Container>\r\n      </Section>\r\n      <Subscription />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n"],"names":["Section","styled","div","withConfig","shouldForwardProp","_templateObject","_taggedTemplateLiteral","p","theme","colors","bbgc","color","background","Title","h2","_templateObject2","fonts","mtf","fontSizes","fontWeights","black","mtc","PageBanner","_ref","children","backgroundColor","backgroundImage","_jsx","concat","Container","display","alignItems","justifyContent","height","section","dispatch","useDispatch","productsObject","useSelector","selectProductsObject","_useProductModal","useProductModal","selectedProduct","isModalOpen","openModalWithProduct","closeModal","useEffect","products","length","fetchAll","limit","toString","_jsxs","_Fragment","shopImg","py","Box","gridTemplateColumns","gridTemplateRows","gridGap","mt","map","productItem","ProductCard","category","imageURL","name","priceOld","price","rating","openModal","_id","Portal","onClose","ProductModal","Subscription"],"sourceRoot":""}